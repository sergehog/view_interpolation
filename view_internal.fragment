#version 330 core

in vec2 UV1o;
in vec2 UV2o;

//uniform uint width;
//uniform uint height;
//uniform uint layers;
uniform sampler2D Texture1;
uniform sampler2D Texture2;
const float cost_thr = 21.f/255;

// Ouput data
out vec4 colorOut;

void main()
{	
	vec3 color1 = textureLod(Texture1, UV1o, 0).bgr;
	vec3 color2 = textureLod(Texture2, UV2o, 0).bgr;
	vec3 color1a = textureLod(Texture1, UV1o, 2).bgr;
	vec3 color2a = textureLod(Texture2, UV2o, 2).bgr;
	vec3 diff = abs(color1-color2)/4 + abs(color1a-color2a)/4;	
	//vec3 diff = abs(color1-color2);	
	float cost = diff.r + diff.g + diff.b;
	cost = cost > cost_thr ? 1.f : cost/cost_thr;
	colorOut = vec4((color1+color2)/2, cost);	
}
